/*
 * API Resource Function Provisioning and Lifecycle Management
 * API to provision,manage lifecyle of, configure and activate Resource Functions (Network Services in ETSI terminology that could be composed from physical or virtual network functions)
 *
 * OpenAPI spec version: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.tmf.dsmapi.resourceFunction.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

/**
 * Task Resource used to request scaling of a Resource Function
 */
@ApiModel(description = "Task Resource used to request scaling of a Resource Function")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-06-15T01:04:08.127Z")
@Entity
public class Scale   {
    
     @Id
  @JsonProperty("id")
  @GeneratedValue(strategy = GenerationType.AUTO)
  private String id = null;

  @JsonProperty("href")
  private String href = null;

  /**
   * Type of scaling requested
   */
  public enum TypeEnum {
    OUT("Scale Out"),
    
    UP("Scale Up"),
    
    IN("Scale In"),
    
    DOWN("Scale Down");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("aspectId")
  private String aspectId = null;

  @JsonProperty("numberOfSteps")
  private Long numberOfSteps = null;

  @JsonProperty("schedule")
  private List<ScheduleRef> schedule = new ArrayList<ScheduleRef>();

  /**
   * Status of the scale operation
   */
  public enum ScaleStatusEnum {
    IN_PROGRESS("In Progress"),
    
    PAUSED_CONSUMER_INPUT_REQUIRED("Paused - Consumer Input Required"),
    
    PAUSED_MANUAL_INTERVENTION_REQUIRED("Paused - Manual Intervention Required");

    private String value;

    ScaleStatusEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScaleStatusEnum fromValue(String text) {
      for (ScaleStatusEnum b : ScaleStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("scaleStatus")
  private ScaleStatusEnum scaleStatus = null;

  public Scale id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the Scale task resource. Required to be unique. Used in URIs as the identifier of the Scale task resource
   * @return id
  **/
  @ApiModelProperty(example = "180987", value = "Identifier of the Scale task resource. Required to be unique. Used in URIs as the identifier of the Scale task resource")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Scale href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Reference to the Resource Function that needs to be scaled
   * @return href
  **/
  @ApiModelProperty(example = "http://serverlocation:port/resourceFunction/17898", required = true, value = "Reference to the Resource Function that needs to be scaled")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Scale type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of scaling requested
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Type of scaling requested")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Scale aspectId(String aspectId) {
    this.aspectId = aspectId;
    return this;
  }

   /**
   * Scaling aspect is the dimension along which the Resource Function needs to be scaled. The id of the aspect is provided here
   * @return aspectId
  **/
  @ApiModelProperty(example = "Quick Access Memory", required = true, value = "Scaling aspect is the dimension along which the Resource Function needs to be scaled. The id of the aspect is provided here")
  public String getAspectId() {
    return aspectId;
  }

  public void setAspectId(String aspectId) {
    this.aspectId = aspectId;
  }

  public Scale numberOfSteps(Long numberOfSteps) {
    this.numberOfSteps = numberOfSteps;
    return this;
  }

   /**
   * Number of scaling steps in the direction indicated by type of scale
   * @return numberOfSteps
  **/
  @ApiModelProperty(example = "2", required = true, value = "Number of scaling steps in the direction indicated by type of scale")
  public Long getNumberOfSteps() {
    return numberOfSteps;
  }

  public void setNumberOfSteps(Long numberOfSteps) {
    this.numberOfSteps = numberOfSteps;
  }

  public Scale schedule(List<ScheduleRef> schedule) {
    this.schedule = schedule;
    return this;
  }

  public Scale addScheduleItem(ScheduleRef scheduleItem) {
    this.schedule.add(scheduleItem);
    return this;
  }

   /**
   * Schedule for the scale. If not provided then needs to be actioned immediately
   * @return schedule
  **/
  @ApiModelProperty(value = "Schedule for the scale. If not provided then needs to be actioned immediately")
  public List<ScheduleRef> getSchedule() {
    return schedule;
  }

  public void setSchedule(List<ScheduleRef> schedule) {
    this.schedule = schedule;
  }

  public Scale scaleStatus(ScaleStatusEnum scaleStatus) {
    this.scaleStatus = scaleStatus;
    return this;
  }

   /**
   * Status of the scale operation
   * @return scaleStatus
  **/
  @ApiModelProperty(value = "Status of the scale operation")
  public ScaleStatusEnum getScaleStatus() {
    return scaleStatus;
  }

  public void setScaleStatus(ScaleStatusEnum scaleStatus) {
    this.scaleStatus = scaleStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scale scale = (Scale) o;
    return Objects.equals(this.id, scale.id) &&
        Objects.equals(this.href, scale.href) &&
        Objects.equals(this.type, scale.type) &&
        Objects.equals(this.aspectId, scale.aspectId) &&
        Objects.equals(this.numberOfSteps, scale.numberOfSteps) &&
        Objects.equals(this.schedule, scale.schedule) &&
        Objects.equals(this.scaleStatus, scale.scaleStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, type, aspectId, numberOfSteps, schedule, scaleStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scale {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    aspectId: ").append(toIndentedString(aspectId)).append("\n");
    sb.append("    numberOfSteps: ").append(toIndentedString(numberOfSteps)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    scaleStatus: ").append(toIndentedString(scaleStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

